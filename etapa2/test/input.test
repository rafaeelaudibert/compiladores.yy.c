// UFRGS - Compiladores - Marcelo Johann - 2020/1

b = bool : FALSE;

c = char : 'x';
a = int: 0;
i = int: 0;
f = float: 0.0;
v1 = int[10]: 0 0 0 0 0 0 0 0 0 0; 
mat = int [ 10]; 

main () = int
  {
  a = 5
  v1[a] = 55
  print v1[55]

  print "Digite um numero: \n"
  read a

  while (i<10)
    {
    i = incn(i,1)
    a = incn(a,1)
    }

  print "Incrementado algumas vezes a fica " ,a ,"\n"

  loop (i:1,10,1)
    print "."
  print "\n"

  if (a==15) then 
    print "A=15\n"

  if ( a==15 | a!=17 ) then
    print "A igual a 15 ou 17\n"

  if (i==100) then 
    {
    print "Nao tem como isso...\n"
    }
  else
    print "OK!\n"
  };

incn (x = int, n = int ) = int
  {
  return x+n
  };

checking_syntax_with_empty_func() = float {
  
};

checking_syntax_@(w = float) = bool {
  i = 5
  i[12] = 6
  i[5 + (4 * 7)] = 9

  read abcde_123
  print one_variable
  print two_variables, the_other_one
  print with, "a", string, "in", the, "middle"

  if ( 5 + (5 == (6 - 1)) != 12 ) then
    print "wat"

  if ( expression ) then {
      i = a_block
      i = with_assignments
  } else {
      another_block = with_assignments
  }

  { 
      print "a_block"
      {
          another_block[inside] = of_it
      }
  }

  i = 6
  while (i < 10) {
      i = i + 1
      print "I is ", i
      {
          print "inside another block"
      }
      i = func_call()
  }

  loop(id:1, 5 + 5, 2|4)
    print id, " without a block"

  id_char = 'c'
  id_int = 15
  id_float = .AB4
  id_parenthesis = (5 + (6 + (7 + (8 + (9 + (10))))))
  id_plus = 5 + 5
  id_minus = 5 - 5
  id_times = 5 * 5
  id_divided = 5 / 5
  id_less_than = 5 < 5
  id_more_than = 5 > 5
  id_or = 5 | 5
  id_xor = 5 ^ 5
  id_tilde = 5 ~ 5
  id_le_than = 5 <= 5
  id_ge_than = 5 >= 5
  id_eq = 5 == 5
  id_dif = 5 != 5

  no_params_call()
  call_func(5, 6, (id * 4))
  return (expression)
};